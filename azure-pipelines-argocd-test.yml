# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- test

pool:
  # name: Default
  name: Azure Pipelines

resources:
  webhooks:
    - webhook: MyHook
      connection: MyHookConnection

stages:
- stage: Build_Test
  jobs:
  - job: Maven_Package
    steps:
    - task: MavenAuthenticate@0
      inputs:
        artifactsFeeds: 'pminkows'
        mavenServiceConnections: 'pminkows'
      displayName: 'Maven Authenticate'
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'clean deploy'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: 1.21
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
      displayName: 'Maven Build'
    - task: CmdLine@2
      inputs:
        script: |
          git clone https://github.com/piomin/openshift-cluster-config.git
          cd openshift-cluster-config
          yq e '.app.version = "1.5.2"' -i apps/pminkows/values-sample-kotlin-spring-test.yaml
          cat apps/pminkows/values-sample-kotlin-spring-test.yaml
      displayName: List catalog
- stage: Deploy_Stage
  dependsOn: Build_Test
  condition: succeeded()
  jobs:
    - deployment: Deployment_Staging
      environment:
        name: staging
      strategy:
        runOnce:
          deploy:
            steps:
            - task: DownloadPackage@1
              inputs:
                packageType: 'maven'
                feed: 'pminkows'
                view: 'Release'
                definition: 'pl.piomin.services:sample-spring-boot-web'
                version: '1.0'
                downloadPath: '$(System.ArtifactsDirectory)'
            - script: 'ls -la $(System.ArtifactsDirectory)'
            
            - task: AzureSpringCloud@0
              inputs:
                azureSubscription: $(subscription)
                Action: 'Deploy'
                AzureSpringCloud: $(serviceName)
                AppName: 'sample-spring-boot-web'
                DeploymentName: default
                Package: '$(System.ArtifactsDirectory)/sample-spring-boot-web-1.0.jar'    
# - task: CmdLine@2
#   inputs:
#     script: 'oc login https://172.30.0.1:443 -u kubeadmin -p $(OCP_PASSWORD) --insecure-skip-tls-verify=true'
#   displayName: Login to OpenShift
# - task: CmdLine@2
#   inputs:
#     script: 'oc project myapp'
#   displayName: Switch to project
# - task: CmdLine@2
#   inputs:
#     script: 'oc process -f ocp/ci.yaml -o yaml -p IMAGE_TAG=v1.0-$(Build.BuildId) -p NAMESPACE=myapp -p BUILDER_IMAGE=ubi8-openjdk-21:1.18 | oc apply -f -'
#   displayName: Create build
# - task: CmdLine@2
#   inputs:
#     script: 'oc start-build sample-spring-boot-web-bc -w'
#     failOnStderr: true
#   displayName: Start build
#   timeoutInMinutes: 5
# - task: vsix-argocd-task@1
#   inputs:
#     ArgoCDService: 'argocd'
#     argocdApplication: '{ Value : "sample-spring-boot-web-test", DisplayValue : "sample-spring-boot-web-test" }'
#     argocdCommand: 'sync'
